server {
	listen 80;
	server_name emby.nucleus.ani;
	location / {
		proxy_pass http://127.0.0.1:8096;
	}
}

server {
	listen 80;
	server_name ombi.nucleus.ani;
	location / {
		proxy_pass http://127.0.0.1:5000;
        proxy_redirect off;
	}
}

server {
	listen 80;
	server_name radarr.nucleus.ani;
	location / {
		proxy_pass http://127.0.0.1:7878;
        include /etc/nginx/proxy_radarr.conf;
	}
}

server {
	listen 80;
	server_name sonarr.nucleus.ani;
	location / {
		proxy_pass http://127.0.0.1:8989;
        proxy_redirect off;
	}
}

server {
	listen 80;
	server_name plex.nucleus.ani;
	location / {
		proxy_pass http://127.0.0.1:32400;
	}
}

server {
	listen 80;
	server_name qbt.nucleus.ani;
	location / {
		proxy_pass http://127.0.0.1:8081;
        include /etc/nginx/proxy_qbt.conf;
	}
}

server {
	listen 80;
	server_name unifi.nucleus.ani;
	location / {
		proxy_pass http://127.0.0.1:8443/;
        proxy_redirect off;
	}
}

server {
	listen 443;
	server_name unifi.nucleus.ani;
	location / {
		proxy_pass https://127.0.0.1:8443/;
        proxy_redirect off;
	}
}


server {
    listen 80 default_server;

    location /test {
        proxy_pass http://127.0.0.1:8000/;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /unifi {
        proxy_pass https://127.0.0.1:8443/;
        proxy_redirect     off;
        #proxy_set_header   Host             $host;
        #proxy_set_header   X-Real-IP        $remote_addr;
        #proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
    }

    location /radarr {
        proxy_pass http://127.0.0.1:7878/radarr;
        proxy_redirect off;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $http_connection;
    }

    location /sonarr {
        proxy_pass http://127.0.0.1:8989/sonarr;
        proxy_redirect off;
    }

    location /ombi {
        proxy_pass http://127.0.0.1:5000;
        proxy_redirect off;
    }

    location /qbt/ {
        proxy_pass         http://127.0.0.1:8081/;
        proxy_http_version 1.1;
        http2_push_preload on; # Enable http2 push

        proxy_set_header   Host               127.0.0.1:8081;
        proxy_set_header   X-Forwarded-Proto  $scheme;
        proxy_set_header   X-Forwarded-Host   $http_host;
        proxy_set_header   X-Forwarded-For    $remote_addr;
        proxy_set_header   X-Real-IP          $remote_addr;

        #optionally, you can adjust the POST request size limit, to allow adding a lot of torrents at once:
        #client_max_body_size 100M;

        # since v4.2.2, is possible to configure qBittorrent
        # to set the "Secure" flag for the session cookie automatically.
        # However, that option does nothing unless using qBittorrent's built-in HTTPS functionality.
        # For this use case, where qBittorrent itself is using plain HTTP
        # (and regardless of whether or not the external website uses HTTPS),
        # the flag must be set here, in the proxy configuration itself:
        proxy_cookie_path / "/; Secure";
    }
}
